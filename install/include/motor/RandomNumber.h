// Generated by gencpp from file motor/RandomNumber.msg
// DO NOT EDIT!


#ifndef MOTOR_MESSAGE_RANDOMNUMBER_H
#define MOTOR_MESSAGE_RANDOMNUMBER_H

#include <ros/service_traits.h>


#include <motor/RandomNumberRequest.h>
#include <motor/RandomNumberResponse.h>


namespace motor
{

struct RandomNumber
{

typedef RandomNumberRequest Request;
typedef RandomNumberResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct RandomNumber
} // namespace motor


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::motor::RandomNumber > {
  static const char* value()
  {
    return "5e093fd141a0ff6a0e66a47360e82cbb";
  }

  static const char* value(const ::motor::RandomNumber&) { return value(); }
};

template<>
struct DataType< ::motor::RandomNumber > {
  static const char* value()
  {
    return "motor/RandomNumber";
  }

  static const char* value(const ::motor::RandomNumber&) { return value(); }
};


// service_traits::MD5Sum< ::motor::RandomNumberRequest> should match
// service_traits::MD5Sum< ::motor::RandomNumber >
template<>
struct MD5Sum< ::motor::RandomNumberRequest>
{
  static const char* value()
  {
    return MD5Sum< ::motor::RandomNumber >::value();
  }
  static const char* value(const ::motor::RandomNumberRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::motor::RandomNumberRequest> should match
// service_traits::DataType< ::motor::RandomNumber >
template<>
struct DataType< ::motor::RandomNumberRequest>
{
  static const char* value()
  {
    return DataType< ::motor::RandomNumber >::value();
  }
  static const char* value(const ::motor::RandomNumberRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::motor::RandomNumberResponse> should match
// service_traits::MD5Sum< ::motor::RandomNumber >
template<>
struct MD5Sum< ::motor::RandomNumberResponse>
{
  static const char* value()
  {
    return MD5Sum< ::motor::RandomNumber >::value();
  }
  static const char* value(const ::motor::RandomNumberResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::motor::RandomNumberResponse> should match
// service_traits::DataType< ::motor::RandomNumber >
template<>
struct DataType< ::motor::RandomNumberResponse>
{
  static const char* value()
  {
    return DataType< ::motor::RandomNumber >::value();
  }
  static const char* value(const ::motor::RandomNumberResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MOTOR_MESSAGE_RANDOMNUMBER_H
