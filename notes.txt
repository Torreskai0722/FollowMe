# NOTES FOR USAGE:

## Setup of Devices:

### setup for lidar:
```sh
sudo chmod 666 /dev/ttyUSB0
roslaunch rplidar_ros rplidar_s1.launch```

### setup for motor
```sh
sudo chmod 777 /dev/ttyUSB0
roslaunch chip_bldc_driver example.launch```



## Demos

### Realsense Camera Demos:
Start the camera node:
`roslaunch realsense2_camera rs_camera.launch initial_reset:=true enable_gyro:=true enable_accel:=true align_depth:=true filters:=pointcloud`

Object Detection and Distance Estimation
```sh
# start the inferencing node
rosrun ros_deep_learning detectnet /dettnet/image_in:=/camera/color/image_raw
rosrun camera detectdepth.py```

Heading Tracking with IMU:
`rosrun camera heading.py`

SLAM-type Mapping (doesn't work very well) using heading
```sh
rosrun camera mapper.py
rviz
`

### RPLidar Demos:
Start with:
```sh
roslaunch rplidar_ros rplidar_s1.launch```

Single revolution plotted as a map:
`rosrun lidar single_map.py` 

Multi Object Detection:
```sh
rosrun lidar pointcloud.py
rosrun multi_object_tracking_lidar kf_tracker
rviz```

### Any of the motor demos:
```sh
rosrun chip_bldc_driver bldc_driver_node
rosrun motor [stepper.py, rpm.py etc.]```



